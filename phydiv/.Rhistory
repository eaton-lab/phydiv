#setting continuous palette
options(ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis")
############ Therapy data ###########
#loading therapy data and pivot
therapy <- read.xlsx("/Users/emilyleggat/Desktop/Business/Adult Documents/Medical/Therapy.xlsx")
therapy_long <- therapy %>%
rename("left brow" = lb,
"left lash" = ll,
"right brow" = rb,
"right lash" = rl) %>%
mutate(date = as.Date(date, origin = "1899-12-30"),
day = as.factor(day),
day = factor(day,
levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")),
month = as.factor(month(date))) %>%
pivot_longer(cols = c(`left brow`:`right lash`),
names_to = "area",
values_to = "number")
#plot total per week
therapy_long %>%
group_by(week) %>%
summarise(total = sum(number)) %>%
ggplot(aes(x = week, y = total)) +
geom_point(color = "#beaed4") +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "#7fc97f") +
annotate("text", x = 12.5, y = 92, label = "election week", color = "grey") +
ylim(0, 100) +
labs(title = "Total hairs/lashes pulled per week since 8/27/24",
y = "total hairs and lashes",
caption = "dashed linear regression line")
#plot total per week by area
therapy_long %>%
group_by(week, area) %>%
summarise(total = sum(number)) %>%
ggplot(aes(x = week, y = total)) +
geom_point(aes(color = area), alpha = 0.5) +
geom_smooth(aes(color = area), method = "lm", se = FALSE)+
theme(legend.position = "bottom") +
labs(title = "Total hairs/lashes pulled per week by area since 8/27/24",
y = "total hairs and lashes",
caption = "linear regression lines by area")
#plot day of the week average
therapy_long %>%
group_by(day, area) %>%
summarise(mean = mean(number)) %>%
ggplot(aes(x = day, y = mean, fill = area)) +
geom_col(position = "stack") +
geom_text(aes(label = round(mean, digits = 1)),
size = 3, position = position_stack(vjust = 0.5),
color = "white") +
theme(legend.position = "bottom") +
labs(title = "Average hairs/lashes pulled per day of the week since 8/27/24",
y = "mean hairs or lashes")
## Therapy
#libraries
library(tidyverse)
library(openxlsx)
###### Plotting theme #####
library(ggthemr)
library(RColorBrewer)
library(viridis)
#setting ggthemr theme
custom <- define_palette(swatch = c("#444444", brewer.pal(n = 8, "Set2"), brewer.pal(n = 8, "Accent")),
gradient = c(lower = "#c6e7de", upper = "#183a31"),
background = "#ffffff",
text = "#444444",
line = "#d1d1d1")
ggthemr(custom, layout = "minimal", type = "outer")
#setting continuous palette
options(ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis")
############ Therapy data ###########
#loading therapy data and pivot
therapy <- read.xlsx("/Users/emilyleggat/Desktop/Business/Adult Documents/Medical/Therapy.xlsx")
therapy_long <- therapy %>%
rename("left brow" = lb,
"left lash" = ll,
"right brow" = rb,
"right lash" = rl) %>%
mutate(date = as.Date(date, origin = "1899-12-30"),
day = as.factor(day),
day = factor(day,
levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")),
month = as.factor(month(date))) %>%
pivot_longer(cols = c(`left brow`:`right lash`),
names_to = "area",
values_to = "number")
#plot total per week
therapy_long %>%
group_by(week) %>%
summarise(total = sum(number)) %>%
ggplot(aes(x = week, y = total)) +
geom_point(color = "#beaed4") +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "#7fc97f") +
annotate("text", x = 12.5, y = 92, label = "election week", color = "grey") +
ylim(0, 100) +
labs(title = "Total hairs/lashes pulled per week since 8/27/24",
y = "total hairs and lashes",
caption = "dashed linear regression line")
#plot total per week by area
therapy_long %>%
group_by(week, area) %>%
summarise(total = sum(number)) %>%
ggplot(aes(x = week, y = total)) +
geom_point(aes(color = area), alpha = 0.5) +
geom_smooth(aes(color = area), method = "lm", se = FALSE)+
theme(legend.position = "bottom") +
labs(title = "Total hairs/lashes pulled per week by area since 8/27/24",
y = "total hairs and lashes",
caption = "linear regression lines by area")
#plot day of the week average
therapy_long %>%
group_by(day, area) %>%
summarise(mean = mean(number)) %>%
ggplot(aes(x = day, y = mean, fill = area)) +
geom_col(position = "stack") +
geom_text(aes(label = round(mean, digits = 1)),
size = 3, position = position_stack(vjust = 0.5),
color = "white") +
theme(legend.position = "bottom") +
labs(title = "Average hairs/lashes pulled per day of the week since 8/27/24",
y = "mean hairs or lashes")
install.packages("quarto")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE)
knitr::opts_knit$set(root.dir = "/Users/emilyleggat/Desktop/PhD/Research/2024 Summer/Data")
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
#call libraries
library(ggthemr)
library(RColorBrewer)
library(viridis)
#setting ggthemr theme
custom <- define_palette(swatch = c("#444444", brewer.pal(n = 8, "Set2"), brewer.pal(n = 8, "Pastel2")),
gradient = c(lower = "#c6e7de", upper = "#183a31"),
background = "#ffffff",
text = "#444444",
line = "#d1d1d1")
ggthemr(custom, layout = "minimal", type = "outer")
#setting continuous palette
options(ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis")
#call libraries
library(ggthemr)
library(RColorBrewer)
library(viridis)
#setting ggthemr theme
custom <- define_palette(swatch = c("#444444", brewer.pal(n = 8, "Set2"), brewer.pal(n = 8, "Pastel2")),
gradient = c(lower = "#c6e7de", upper = "#183a31"),
background = "#ffffff",
text = "#444444",
line = "#d1d1d1")
ggthemr(custom, layout = "minimal", type = "outer")
#setting continuous palette
options(ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis")
# List required packages
library(tidyverse)
library(vegan)
# Import site history data
sites <- read.csv("Insect diversity data - Site use history.csv")
#Make landfill age categorical
sites$landfill.age <- as.character(sites$landfill.age)
# List subsets of site use types
sites_sum <- sites %>%
summarize(
neither = sum(forever.wild == 0 & landfill == 0, na.rm = TRUE),
fw_only = sum(forever.wild == 1 & landfill == 0, na.rm = TRUE),
lf_only = sum(forever.wild == 0 & landfill == 1, na.rm = TRUE),
both = sum(forever.wild == 1 & landfill == 1, na.rm = TRUE)
) %>%
pivot_longer(cols = neither:both, names_to = "luh", values_to = "count")
# Subset data into the four use history categories
sites_n <- sites %>% #no forever wild or landfill
filter(forever.wild == 0 & landfill == 0)
sites_fw <- sites %>% #forever wild only
filter(forever.wild == 1 & landfill == 0)
sites_lf <- sites %>% #landfill only
filter(forever.wild == 0 & landfill == 1)
sites_b <- sites %>%
filter(forever.wild == 1 & landfill == 1)
# Set seed
set.seed(1234)
#randomly select 3 samples from each site use history
random_n <- sites_n %>% #neither
slice_sample(n = 3)
random_fw <- sites_fw %>% #forever wild only
slice_sample(n = 3)
random_lf <- sites_lf %>% #landfill only
group_by(landfill.age) %>% #one sample from each landfill age
slice_sample(n = 1) %>%
ungroup()
random_b <- sites_b %>% #both
group_by(landfill.age) %>% #one sample from each landfill age
slice_sample(n = 1) %>%
ungroup()
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(!= luh & !=egg.pupa)
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(c(sample.id, coleoptera:thysanoptera))
#load in data
insect_ab <- read.csv("insect_abundance")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE)
knitr::opts_knit$set(root.dir = "/Users/emilyleggat/Desktop/PhD/Research/2024 Summer/Data")
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
#call libraries
library(ggthemr)
library(RColorBrewer)
library(viridis)
#setting ggthemr theme
custom <- define_palette(swatch = c("#444444", brewer.pal(n = 8, "Set2"), brewer.pal(n = 8, "Pastel2")),
gradient = c(lower = "#c6e7de", upper = "#183a31"),
background = "#ffffff",
text = "#444444",
line = "#d1d1d1")
ggthemr(custom, layout = "minimal", type = "outer")
#setting continuous palette
options(ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis")
# List required packages
library(tidyverse)
library(vegan)
# Import site history data
sites <- read.csv("Insect diversity data - Site use history.csv")
#Make landfill age categorical
sites$landfill.age <- as.character(sites$landfill.age)
# List subsets of site use types
sites_sum <- sites %>%
summarize(
neither = sum(forever.wild == 0 & landfill == 0, na.rm = TRUE),
fw_only = sum(forever.wild == 1 & landfill == 0, na.rm = TRUE),
lf_only = sum(forever.wild == 0 & landfill == 1, na.rm = TRUE),
both = sum(forever.wild == 1 & landfill == 1, na.rm = TRUE)
) %>%
pivot_longer(cols = neither:both, names_to = "luh", values_to = "count")
# Subset data into the four use history categories
sites_n <- sites %>% #no forever wild or landfill
filter(forever.wild == 0 & landfill == 0)
sites_fw <- sites %>% #forever wild only
filter(forever.wild == 1 & landfill == 0)
sites_lf <- sites %>% #landfill only
filter(forever.wild == 0 & landfill == 1)
sites_b <- sites %>%
filter(forever.wild == 1 & landfill == 1)
# Set seed
set.seed(1234)
#randomly select 3 samples from each site use history
random_n <- sites_n %>% #neither
slice_sample(n = 3)
random_fw <- sites_fw %>% #forever wild only
slice_sample(n = 3)
random_lf <- sites_lf %>% #landfill only
group_by(landfill.age) %>% #one sample from each landfill age
slice_sample(n = 1) %>%
ungroup()
random_b <- sites_b %>% #both
group_by(landfill.age) %>% #one sample from each landfill age
slice_sample(n = 1) %>%
ungroup()
#load in data
samp <- read.csv("Insect samples - all.csv")
#subset to only first round samples
samp1 <- samp %>%
filter(visit == 1)
#merge the datasets by site and replicate
samp1_luh <- merge(samp1,
(sites %>% #getting separate site and replicate from the site.id
separate(site.id, into = c("site", "replicate"),sep = "\\.")),
by = c("site", "replicate"), all = FALSE) #not all sites were sampled, so don't need all luh rows
#borough graph
samp1_luh %>%
group_by(borough) %>%
summarize(count = n()) %>% #getting counts by borough
ggplot(aes(x = "", y = count, fill = borough)) +
geom_bar(stat = "identity", width = 1, color = "white") +
geom_text(aes(label = count),
position = position_stack(vjust = 0.5),
color = "white") +
labs(title = "Number of samples by borough (n = 94)") +
coord_polar("y") +
theme_void()
#land use history graph
samp1_luh %>%
summarize( #counting land use histories
neither = sum(forever.wild == 0 & landfill == 0, na.rm = TRUE),
fw_only = sum(forever.wild == 1 & landfill == 0, na.rm = TRUE),
lf_only = sum(forever.wild == 0 & landfill == 1, na.rm = TRUE),
both = sum(forever.wild == 1 & landfill == 1, na.rm = TRUE)
) %>%
pivot_longer(cols = neither:both, names_to = "luh", values_to = "count") %>% #making a usable table
ggplot(aes(x = "", y = count, fill = luh)) +
geom_bar(stat = "identity", width = 1, color = "white") +
geom_text(aes(label = count),
position = position_stack(vjust = 0.5),
color = "white") +
labs(title = "Number of samples by land use history (n = 94)") +
coord_polar("y") +
theme_void()
#landfill graph
samp1_luh %>%
filter(landfill == 1) %>%
group_by(landfill.age) %>%
summarize(count = n()) %>%
ggplot(aes(x = "", y = count, fill = landfill.age)) +
geom_bar(stat = "identity", width = 1, color = "white") +
geom_text(aes(label = count),
position = position_stack(vjust = 0.5),
color = "white") +
labs(title = "Number of landfill samples by landfill age (n = 43)") +
coord_polar("y") +
theme_void()
#load in data
insect_ab <- read.csv("insect_abundance")
#load in data
insect_ab <- read.csv("insect_abundance.csv")
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(c(sample.id, coleoptera:thysanoptera))
View(insect_ab_shan)
#calculate Shannon diversity
shannon_insect <- diversity(insect_ab_shan, index = "shannon")
class(insect_ab$coleoptera)
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(c(sample.id, coleoptera:thysanoptera)) %>%
column_to_rownames("sample.id")
View(insect_ab_shan)
#calculate Shannon diversity
shannon_insect <- diversity(insect_ab_shan, index = "shannon")
#calculate richness and Shannon diversity
sr_insect <- specnumber(insect_ab_shan)
#add values back to insect data
insect_div <- insect_ab %>%
cbind(sr_insect)
View(insect_div)
#add values back to insect data
insect_div <- insect_ab %>%
cbind(sr_insect, shannon_insect)
View(insect_div)
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_point(color = luh) +
labs(title = "Order richness of 12 samples")
View(insect_div)
#load in data
insect_ab <- read.csv("insect_abundance.csv")
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(c(sample.id, coleoptera:thysanoptera)) %>% #exclude spiders and eggs/pupa
column_to_rownames("sample.id")
#calculate richness and Shannon diversity
sr_insect <- specnumber(insect_ab_shan)
shannon_insect <- diversity(insect_ab_shan, index = "shannon")
#add values back to insect data
insect_div <- insect_ab %>%
cbind(sr_insect, shannon_insect)
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_point(color = luh) +
labs(title = "Order richness of 12 samples")
geom_point(color = "blue"") +
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_point(color = "blue") +
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_point(aes(color = luh)) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh)) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.2) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_point(aes(color = luh), width = 0.2) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.1) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.1, height = 0) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0) +
labs(title = "Order richness of 12 samples")
#plot Shannon
insect_div %>%
ggplot(aes(x = luh, y = shannon_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0) +
labs(title = "Order richness of 12 samples")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "taxonomic order richness") +
show.legend = FALSE
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect), show.legend = FALSE) +
geom_jitter(aes(color = luh), width = 0.15, height = 0) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "taxonomic order richness") +
show.legend = FALSE
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect), show.legend = FALSE) +
geom_jitter(aes(color = luh), width = 0.15, height = 0) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "taxonomic order richness")
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "taxonomic order richness")
#plot Shannon
insect_div %>%
ggplot(aes(x = luh, y = shannon_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "Shannon index (H')")
#clean data for Shannon diversity
insect_ab_spider <- insect_ab %>%
select(c(sample.id, coleoptera:arachnid)) %>% #exclude spiders and eggs/pupa
column_to_rownames("sample.id")
#calculate richness and Shannon diversity
sr_spider <- specnumber(insect_ab_spider)
shannon_spider <- diversity(insect_ab_spider, index = "shannon")
#add values back to insect data
spider_div <- insect_ab %>%
cbind(sr_spider, shannon_spider)
#plot species richness
spider_div %>%
ggplot(aes(x = luh, y = sr_spider)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Order richness of 12 samples (including arachnids)",
x = "landfill history",
y = "taxonomic order richness")
#plot Shannon
insect_div %>%
ggplot(aes(x = luh, y = shannon_spider)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Shannon diversity of 12 samples (including arachnids)",
x = "landfill history",
y = "Shannon index (H')")
#load in data
insect_ab <- read.csv("insect_abundance.csv")
#clean data for Shannon diversity
insect_ab_shan <- insect_ab %>%
select(c(sample.id, coleoptera:thysanoptera)) %>% #exclude spiders and eggs/pupa
column_to_rownames("sample.id")
#calculate richness and Shannon diversity
sr_insect <- specnumber(insect_ab_shan)
shannon_insect <- diversity(insect_ab_shan, index = "shannon")
#add values back to insect data
insect_div <- insect_ab %>%
cbind(sr_insect, shannon_insect)
#plot species richness
insect_div %>%
ggplot(aes(x = luh, y = sr_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Order richness of 12 samples",
x = "landfill history",
y = "taxonomic order richness")
#plot Shannon
insect_div %>%
ggplot(aes(x = luh, y = shannon_insect)) +
geom_jitter(aes(color = luh), width = 0.15, height = 0, show.legend = FALSE) +
labs(title = "Shannon diversity of 12 samples",
x = "landfill history",
y = "Shannon index (H')")
View(insect_div)
setwd("/Users/emilyleggat/Documents/GitHub/hacks/phydiv/phydiv")
library(tidyverse)
library(picante)
library(phangorn)
library(stringr)
bugs <- read.csv("default_seq.csv")
View(bugs)
setwd("/Users/emilyleggat/Documents/GitHub/hacks/phydiv/phydiv")
library(tidyverse)
library(picante)
library(phangorn)
library(stringr)
bugs <- read.csv("default_seq.csv")
View(bugs)
write.FASTA(read.GenBank(Accession.number), file = "default_seq.csv")
write.FASTA(read.GenBank(`Accession number`), file = "default_seq.csv")
